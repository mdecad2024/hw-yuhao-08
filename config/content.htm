<h1>About</h1>
<p>國立虎尾科技大學機械設計工程系</p>
<p>National Formosa University</p>
<p>Department of Mechanical Design Engineering</p>
<p>cad2024 電腦輔助設計與實習</p>
<p>課程教材:</p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/Intro_to_Mechatronics.pdf">Intro_to_Mechatronics.pdf</a> (<a href="http://engineering.nyu.edu/mechatronics/Control_Lab/bck/VKapila/Intro2EngLect/">Source</a>)</p>
<p style="padding-left: 30px;"><a href="https://pythontutor.com/"></a><a href="https://link.springer.com/book/10.1007/978-3-031-57148-0">Programming with Python for Engineers</a></p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/nx2306_tutorial_video.7z">NX Tutorial</a></p>
<p style="padding-left: 30px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 30px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入 <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a> Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span class="fui-Text ___vec8h90 fk6fouc f1pbo8a8 f1i3iumi figsok6 fpgzoln f1w7gpdv f6juhto f1mtd64y f1y7q3j9 f2jf649 foxqkq2" data-tid="join-team-code">j19kw75</span></p>
<p>個人倉儲:<a href="https://github.com/mdecad2024/hw-yuhao-08">https://github.com/mdecad2024/hw-yuhao-08</a></p>
<p>個人網站:<a href="https://mdecad2024.github.io/hw-yuhao-08">https://mdecad2024.github.io/hw-yuhao-08</a></p>
<p>其他資訊</p>
<h1>Attendance</h1>
<p>出席 (10%) - 自行舉證評分</p>
<p>自行利用 Github commits 提交記錄評分.</p>
<h1>Weeks</h1>
<h2>W1</h2>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/B6Jy16Ggw6U?si=hIdzQsD8-u_jBSa9" title="YouTube video player" width="560"></iframe></p>
<p>1.第一周主要是先建立github的作業網站，replit已無法再使用，所以只能使用近端開啟動態網頁</p>
<p>2.複習過往的作業建立的方法</p>
<h2>W2</h2>
<p>1.首先進入codespaces</p>
<p>2.建立一個新的終端機</p>
<p>3.在init_replit裡找到  <span>pip</span><span> </span><span>install</span><span> </span><span>flask</span><span> </span><span>flask_cors</span><span> </span><span>bs4</span><span> </span><span>lxml</span><span> </span><span>pelican</span><span> </span><span>markdown</span><span> </span><span>gevent</span></p>
<p><span>4.在終端機複製上面的程式代碼</span></p>
<p>  執行動態-----python3 main.py</p>
<p>  執行靜態-----python3 main2.py</p>
<p>5.推上到靜態網頁上</p>
<p>    git add .</p>
<p>    git commit -m"新增要推上去的簡介"</p>
<p>    git push</p>
<h2>W3</h2>
<p>1.填寫github帳號到excel上</p>
<p>2.教solvespace畫圖</p>
<p>3.分析solvespaces的功用和職場發展:</p>
<p><span>ChatGPT:<br/>①SolveSpace 是一款開源的參數化3D CAD建模軟體，主要用於製作2D和3D的技術設計、工程建模及機械設計</span></p>
<p><span>②</span><span>SolveSpace 在業界的應用更多聚焦於 <strong>輕量化、快速設計、教育用途和製造準備</strong>。對於需要高端功能的大型企業， 可能不夠用，但對於初創團隊、個人設計師或教育領域來說，它是一個靈活且經濟實惠的解決方案。</span></p>
<p><span>網路(google):</span></p>
<p><span><a href="https://blog.csdn.net/gitblog_00264/article/details/141452063">分析solvespaces的職場功用和能力</a></span></p>
<h2>W7</h2>
<p>1.下載並嘗試開啟NX檔案匯入</p>
<p>2.分組利用solvespaces畫圖，<a href="https://support.industrysoftware.automation.siemens.com/training/se/en/ST3/pdf/spse01550.pdf">圖檔畫到第32頁</a></p>
<p>3.開啟NX的操作步驟如下:</p>
<p><span>①先下載 <span style="text-decoration: underline;">NX2312_CAD</span> 和 <span style="text-decoration: underline;">python_2025_lite</span></span></p>
<p>②解壓縮到自己USB裡面的資料夾裡面</p>
<p><span>③解壓縮完把兩個檔案合併 NX2312合併到python裡面並且改檔名為NX</span></p>
<p><span>④開啟ipv6 並且把ipv6裡面的內容移動到空的ipv6裡面</span></p>
<p><span>⑤開啟 C:\Windows\system32\cmd.exe 並且輸入 ugraf --nx 即可完成。</span></p>
<h2>W9</h2>
<p>1.打其中自評成績</p>
<p>2.分析NX的在職場發展與作用</p>
<p>ChatGPT:</p>
<p><span>①Siemens NX 是一款高端 CAD/CAM/CAE 軟體，廣泛應用於<span style="color: #00ff00;">產品設計</span>、<span style="color: #00ff00;">製造</span>和<span style="color: #00ff00;">工程分析</span>。</span></p>
<p><span>②在職場中，NX 在<span style="color: #00ff00;">航空航太</span>、<span style="color: #00ff00;">汽車製造</span>、<span style="color: #00ff00;">精密機械</span>等領域扮演重要角色。其強大的 3D 建模功能適合複雜的零件與裝配設計，並支持參數化建模和自由曲面建模。</span></p>
<p>Google:</p>
<p><a href="https://www.solid-edge.com.tw/wp-content/uploads/NX-Overview.pdf">https://www.solid-edge.com.tw/wp-content/uploads/NX-Overview.pdf</a></p>
<p>簡述之:</p>
<p><span>①</span>無可比擬的功能、完整整合的產品開發、優越的生產力、高效能產品設計、整合的工業設計、機電系統設計、視覺化分析和驗證等</p>
<p><span>倆者繪圖簡述比較:</span></p>
<p><span>    ①Solvespaces:可畫較簡易的3D圖形設計分析。<br/></span></p>
<p>    <span>②</span>NX:可以畫出曲面和模擬加工的各種運用，並且廣泛運用在業界當中，與solidworks和inventer比較多了一些功  能。</p><h1>Parts</h1>
<h2>練習</h2>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="351" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/G1S5h2gos0M" title="" width="696"></iframe></p>
<p></p>
<p></p>
<p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
</p>
<p><canvas height="600" id="cv" style="border: 1px solid;" width="800"></canvas></p>
<div style="width: 800px; height: 70px; border: 1px solid;">Model Color:<input id="mdlClr" onchange="changeOption('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40"/> Back Color1:<input id="bckClr1" onchange="changeOption('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color"/> Back Color2:<input id="bckClr2" onchange="changeOption('BackgroundColor2',this.value)" type="color"/><br/> Render Mode:<select id="render" onchange="changeOption('RenderMode',this.value)">
<option>Flat</option>
<option>Point</option>
<option>Wireframe</option>
<option>Smooth</option>
</select>Definition:<select id="defini" onchange="changeOption('Definition',this.value)">
<option>Standard</option>
<option>low</option>
<option>high</option>
</select></div>
<p>
<script type="text/javascript">
var viewer3d;
    function getOptions(){
        var mc = document.getElementById("mdlClr").value;
        var bc1 = document.getElementById("bckClr1").value;
        var bc2 = document.getElementById("bckClr2").value;
        var ren = document.getElementById("render").value;
        var def = document.getElementById("defini").value;
        return {ModelColor: mc,
                BackgroundColor1: bc1,
                BackgroundColor2: bc2,
                RenderMode: ren,
                Definition: def};
    }
    function readSTLfile(opt){
        var canvas = document.getElementById('cv');
        viewer3d = new JSC3D.Viewer(canvas);
        viewer3d.setParameter('SceneUrl', opt.SceneUrl);
        viewer3d.setParameter('InitRotationX', 0);
        viewer3d.setParameter('InitRotationY', 0);
        viewer3d.setParameter('InitRotationZ', 0);
        viewer3d.setParameter('ModelColor', opt.ModelColor);
        viewer3d.setParameter('BackgroundColor1', opt.BackgroundColor1);
        viewer3d.setParameter('BackgroundColor2', opt.BackgroundColor2);
        viewer3d.setParameter('RenderMode', opt.RenderMode);
        viewer3d.setParameter('Definition', opt.Definition);
        viewer3d.init();
        viewer3d.update();
    }
    function changeOption(strOpt,strValue){
    console.log("change " + strOpt + " to " + strValue);
        viewer3d.setParameter(strOpt, strValue);
        viewer3d.init();
        viewer3d.update();
    }
    function openByUrl(){
        var url = document.getElementById("url").value;
        var opt = getOptions();
        opt.SceneUrl = document.getElementById("url").value;
        readSTLfile(opt);
    }
    function openByPass(){
        var pass = document.getElementById("url").value;
        var opt = getOptions();
        var fs = document.getElementById("pass").files;
        var f = fs[0];
        var reader = new FileReader();
        reader.onload = (function(theFile) {
            return function(e) {            
                opt.SceneUrl = e.target.result;
                console.log(opt.SceneUrl);
                readSTLfile(opt);
            };
        })(f);
        reader.readAsDataURL(f);
    }
    function openByGet(){
        var url = "https://s104.cycu.org/~41223131/41223131_part1.stl";
        var opt = getOptions();
        opt.SceneUrl = url;
        readSTLfile(opt);
    }
    function GetQueryString(){
        if( 1 < window.location.search.length )
        {
            var query = window.location.search.substring( 1 );
            var parameters = query.split( '&' );
            var result = new Object();
            for( var i = 0; i < parameters.length; i++ )
            {
                var element = parameters[ i ].split( '=' );
                var paramName = decodeURIComponent( element[ 0 ] );
                var paramValue = decodeURIComponent( element[ 1 ] );
                result[ paramName ] = decodeURIComponent( paramValue );
            }
            return result;
        }
        return null;
    }
    openByGet();
</script>
</p>
<h2>Base Plate</h2>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223131/41223131_part15.stl">模型1</a> <!-- 第一題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
        'https://www.youtube.com/embed/KnZUK0JmUB8', // 第一題的影片
    ];
    
    var titles = ['Base Plate']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>Bearing block A</h2>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223131/41223131_part4-1.stl">模型1</a> <!-- 第一題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
        'https://www.youtube.com/embed/joCMgHDfzLs', // 第一題的影片
    ];
    
    var titles = ['Bearing block A']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>Bearing block B</h2>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223131/41223131_part3.stl">模型1</a> <!-- 第一題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
        'https://www.youtube.com/embed/avPmO_3cq-Q', // 第一題的影片
    ];
    
    var titles = ['Bearing block B']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>Dovetail bracket</h2>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223131/41223131_part5.stl">模型1</a> <!-- 第一題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
        'https://www.youtube.com/embed/LYn3dJEg24w', // 第一題的影片
    ];
    
    var titles = ['Dovetail bracket']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>Dovetail stop</h2>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223131/41223131_part6.stl">模型1</a> <!-- 第一題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
        'https://www.youtube.com/embed/hpPhxr0FWJs', // 第一題的影片
    ];
    
    var titles = ['Dovetail stop']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>Gland blank</h2>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223131/41223131_part7.stl">模型1</a> <!-- 第一題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
        'https://www.youtube.com/embed/byuGshn9T-4', // 第一題的影片
    ];
    
    var titles = ['Gland blank']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>Gland</h2>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223131/41223131_part10.stl">模型1</a> <!-- 第一題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
        'https://www.youtube.com/embed/mSZHi4vCsk4', // 第一題的影片
    ];
    
    var titles = ['Gland']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>Giude plate</h2>
<p></p>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223131/41223131_part9.stl">模型1</a> <!-- 第一題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
        'https://www.youtube.com/embed/vAZP_FqN5pk', // 第一題的影片
    ];
    
    var titles = ['Giude plate']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>Head attachment</h2>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223131/41223131_part14.stl">模型1</a> <!-- 第一題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
        'https://www.youtube.com/embed/nGuQaeFCiIs', // 第一題的影片
    ];
    
    var titles = ['Head attachment']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h2>Head yoke</h2>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223131/41223131_part11.stl">模型1</a> <!-- 第一題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
        'https://www.youtube.com/embed/qPu3coTV-t8', // 第一題的影片
    ];
    
    var titles = ['Head yoke']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h1>HW1</h1>
<p>Homework 1 (10%):</p>
<p></p>
<p style="padding-left: 30px;">利用 Solvespace 與 NX2312 建立<span> </span><a href="https://mde.tw/cad2024/content/Parts.html">Parts</a><span> </span>頁面中的零件</p>
<p style="padding-left: 30px;">其他<a href="http://229.cycu.org/part_modeling_projects.pdf">零件模擬練習</a></p>
<hr/>
<p><span style="color: #333300;">上面為tmp匯入置網頁上操作的方法</span></p>
<p>利用 Solvespace 繪製列表中零件的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業一之一</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業一之二</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p style="padding-left: 30px;">......</p>
<p>利用 NX2312 繪製列表中零件的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業一之三</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業一之四</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p style="padding-left: 30px;">......</p>
<p>HW1 執行心得:</p>
<p style="padding-left: 30px;">......</p>
<p>HW1 自評分數:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 HW1 自評分數輸入 cad2024 自評表單中.</p>
<h2>HW1_Exam</h2>
<p>從<a href="http://229.cycu.org/part_modeling_projects.pdf">零件模擬練習</a>中選出零件, 隨堂進行考試.</p>
<p>零件考試題目以 Solvespace 繪圖操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p>零件考試題目以 NX2312 繪圖操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<h2>W10</h2>
<script src="/static/jsc3d.js" type="text/javascript"></script>
<!-- 模型連結 -->
<div id="modelLinks1" style="display: none;"><a href="https://s104.cycu.org/~41223131/41223131_part12.stl">模型1</a> <!-- 第一題的模型 --></div>
<!-- 動態生成的模型部分 -->
<div id="modelParts1"></div>
<script type="text/javascript">
// 函數用來動態生成模型部件
function createModelPart(index, url, ytUrl, title) {
    var modelPartDiv = document.createElement('div');
    modelPartDiv.innerHTML = `
        <h3>${title}</h3> <!-- 題目標題 -->
        <div id="models${index}">
            <canvas height="300" id="cv${index}" style="border: 1px solid;" width="400"></canvas>
        </div>

        <div style="width: 400px; height: 70px; border: 1px solid; margin-bottom: 20px;">
            Model Color:<input id="mdlClr${index}" onchange="changeOption${index}('ModelColor',this.value)" style="margin-right: 50px;" type="color" value="#00ff40">
            Back Color1:<input id="bckClr${index}_1" onchange="changeOption${index}('BackgroundColor1',this.value)" style="margin-right: 50px;" type="color">
            Back Color2:<input id="bckClr${index}_2" onchange="changeOption${index}('BackgroundColor2',this.value)" type="color"><br>
            Render Mode:<select id="render${index}" onchange="changeOption${index}('RenderMode',this.value)">
                <option>Flat</option>
                <option>Point</option>
                <option>Wireframe</option>
                <option>Smooth</option>
            </select>
            Definition:<select id="defini${index}" onchange="changeOption${index}('Definition',this.value)">
                <option>Standard</option>
                <option>low</option>
                <option>high</option>
            </select>
        </div>
        
        <div id="videoPlaceholder${index}" style="margin-bottom: 20px;">
            <iframe width="560" height="315" src="${ytUrl}" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        </div>
    `;
    document.getElementById('modelParts1').appendChild(modelPartDiv);

    // 初始化觀察者和選項
    window[`viewer${index}`] = null;

    // 獲取選項的函數
    window[`getOptions${index}`] = function() {
        var mc = document.getElementById(`mdlClr${index}`).value;
        var bc1 = document.getElementById(`bckClr${index}_1`).value;
        var bc2 = document.getElementById(`bckClr${index}_2`).value;
        var ren = document.getElementById(`render${index}`).value;
        var def = document.getElementById(`defini${index}`).value;
        return {ModelColor: mc, BackgroundColor1: bc1, BackgroundColor2: bc2, RenderMode: ren, Definition: def};
    };

    window[`readSTLfile${index}`] = function(opt, canvasId) {
        var canvas = document.getElementById(canvasId);
        window[`viewer${index}`] = new JSC3D.Viewer(canvas);
        window[`viewer${index}`].setParameter('SceneUrl', opt.SceneUrl);
        window[`viewer${index}`].setParameter('InitRotationX', 0);
        window[`viewer${index}`].setParameter('InitRotationY', 0);
        window[`viewer${index}`].setParameter('InitRotationZ', 0);
        window[`viewer${index}`].setParameter('ModelColor', opt.ModelColor);
        window[`viewer${index}`].setParameter('BackgroundColor1', opt.BackgroundColor1);
        window[`viewer${index}`].setParameter('BackgroundColor2', opt.BackgroundColor2);
        window[`viewer${index}`].setParameter('RenderMode', opt.RenderMode);
        window[`viewer${index}`].setParameter('Definition', opt.Definition);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`changeOption${index}`] = function(strOpt, strValue) {
        console.log(`PART ${index} change ` + strOpt + " to " + strValue);
        window[`viewer${index}`].setParameter(strOpt, strValue);
        window[`viewer${index}`].init();
        window[`viewer${index}`].update();
    };

    window[`openByGet${index}`] = function() {
        var opt = window[`getOptions${index}`]();
        opt.SceneUrl = url;
        window[`readSTLfile${index}`](opt, `cv${index}`);
    };

    window[`openByGet${index}`]();  // 加載模型
}

function initModelParts() {
    var links = document.querySelectorAll('#modelLinks1 a');
    var ytLinks = [
        'https://www.youtube.com/embed/p1Bi0oC1Iiw', // 第一題的影片
    ];
    
    var titles = ['W10測驗']; // 題目標題
    
    links.forEach(function(link, index) {
        createModelPart(index + 1, link.href, ytLinks[index % ytLinks.length], titles[index]); // 將標題傳遞進去
    });
}

window.onload = initModelParts;  // 頁面加載時初始化所有模型
</script>
<h3>W10NX</h3>
<p>W10的考試利用NX來畫並且測試</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="514" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/sl3TUBU5-rI" title="W10 NX的操作影片" width="956"></iframe></p>
<h1>HW2</h1>
<p>Homework 2 (10%):</p>
<p style="padding-left: 30px;">利用 Solvespace 與 NX 建立 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 組立件</p>
<hr/>
<p>利用 Solvespace 繪製 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 組立件的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業二之一</p>
<p style="padding-left: 30px;">所完成的零組件檔案下載</p>
<p>利用 NX2312 繪製 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 組立件的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業二之二</p>
<p style="padding-left: 30px;">所完成的零件檔案下載</p>
<p>HW2 執行心得:</p>
<p style="padding-left: 30px;">......</p>
<p>HW2 自評分數:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 HW2 自評分數輸入 cad2024 自評表單中.</p>
<h2>HW2_Exam</h2>
<p>與 HW2 內容相近的組立件題目, 隨堂進行考試.</p>
<p>零件與組立件考試題目以 Solvespace 繪圖操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的零件與組立件檔案下載</p>
<p>零件與組立件考試題目以 NX 繪圖操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的零件與組立件檔案下載</p>
<h1>HW3</h1>
<p>Homework 3 (20%):</p>
<p style="padding-left: 30px;">建立 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 控制系統設計模擬場景</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/Balance_On_Wheels">https://github.com/mdecycu/Balance_On_Wheels</a></p>
<p style="padding-left: 30px;"><img alt="" height="217" src="https://mde.tw/cad2024/images/balance_on_wheels.png" width="400"/></p>
<p style="padding-left: 30px;"><img alt="" height="217" src="https://mde.tw/cad2024/images/Balance_on_wheels_scene.png" width="400"/></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cad2024/downloads/Balance_on_wheels_nx2312.7z">Balance_on_wheels_nx2312.7z</a></p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cad2024/downloads/Balance_on_Wheel_scene.7z">Balance_on_Wheel_scene.7z</a></p>
<h2>HW3_Exam</h2>
<p>與 HW3 內容相近的模擬場景題目, 隨堂進行考試.</p>
<p>建立模擬場景操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的模擬場景與控制程式檔案下載</p>
<hr/>
<p>利用 CoppeliaSim 建立 <a href="https://mde.tw/cad2024/content/BonW.html">Balance on Wheels</a> 控制系統設計模擬場景的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業三</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的場景與控制程式檔案下載</p>
<p>HW3 執行心得:</p>
<p style="padding-left: 30px;">......</p>
<p>HW3 自評分數:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 HW3 自評分數輸入 cad2024 自評表單中.</p>
<h1>HW4</h1>
<p>Homework 4 (20%):</p>
<p style="padding-left: 30px;">建立 <a href="https://mde.tw/cad2024/content/Quadruped.html">Dingo 機器狗</a>控制系統設計模擬場景</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/DingoQuadruped">https://github.com/mdecycu/DingoQuadruped</a></p>
<p style="padding-left: 30px;"><a href="http://229.cycu.org/DINGO_QUADRUPED_CAD.7z">DINGO_QUADRUPED_CAD.7z</a></p>
<p style="padding-left: 30px;"><img alt="" height="217" src="https://mde.tw/cad2024/images/dingo.png" width="400"/></p>
<hr/>
<p>利用 CoppeliaSim 建立 <a href="https://mde.tw/cad2024/content/Quadruped.html">Dingo 機器狗</a>控制系統設計模擬場景的操作過程與說明影片如下:</p>
<p style="padding-left: 30px;">影片標題: 國立虎尾科技大學機械設計工程系電腦輔助設計與實習- 作業四</p>
<p style="padding-left: 30px;">所完成的場景與控制程式檔案下載</p>
<p>HW4 執行心得:</p>
<p style="padding-left: 30px;">....</p>
<p>HW4 自評分數:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 HW4 自評分數輸入 cad2024 自評表單中.</p>
<h2>HW4_Exam</h2>
<p>與 HW4 內容相近的模擬場景題目, 隨堂進行考試.</p>
<p>建立模擬場景操作過程影片如下:</p>
<p style="padding-left: 30px;">請將操作影片嵌入 ......</p>
<p style="padding-left: 30px;">所完成的模擬場景與控制程式檔案下載</p>
<h1>Final Report</h1>
<p>期末口頭與書面專題報告 (30%)</p>
<p>期末口頭專題報告影片:</p>
<p style="padding-left: 30px;">......</p>
<p>期末書面專題報告檔案 (pdf):</p>
<p style="padding-left: 30px;">......</p>
<p>電腦輔助設計與實習課程總結心得:</p>
<p style="padding-left: 30px;">......</p>
<p>期末報告自評成績:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 Final Report 自評分數輸入 cad2024 自評表單中.</p>